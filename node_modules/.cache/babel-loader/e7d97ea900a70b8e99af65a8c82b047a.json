{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/reactStudy/hw3/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Searchbar from './components/Searchbar.jsx';\nimport fetchPics from './fetch';\nimport GalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner.jsx';\nimport style from './style.module.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pics: [],\n      error: null,\n      loading: false,\n      searchQuery: '',\n      page: 1,\n      showModal: false,\n      largeImgUrl: ''\n    };\n\n    this.doFetch = () => {\n      const {\n        searchQuery,\n        page\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      fetchPics(searchQuery, page).then(pics => this.setState(prevState => ({\n        pics: [...prevState.pics, ...pics],\n        page: prevState.page + 1\n      }))).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    };\n\n    this.handleQuerySaver = query => {\n      this.setState({\n        searchQuery: query\n      });\n    };\n\n    this.smoothScroll = () => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth'\n      });\n    };\n\n    this.showModal = e => {\n      const largeUrl = e.target.largeUrl;\n      this.setState({\n        showModal: true,\n        largeImageURL: largeUrl\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({\n        pics: [],\n        page: 1\n      });\n      this.doFetch();\n    }\n\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevPage < nextPage) {\n      this.smoothScroll();\n    }\n  }\n\n  render() {\n    const {\n      pics,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Searchbar, {\n      onSubmit: this.handleQuerySaver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: style.ImageGallery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, pics.map(pic => /*#__PURE__*/React.createElement(GalleryItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))), loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), pics.length > 0 && /*#__PURE__*/React.createElement(Button, {\n      loadMore: this.doFetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macos/Desktop/reactStudy/hw3/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Searchbar","fetchPics","GalleryItem","Button","Spinner","style","App","state","pics","error","loading","searchQuery","page","showModal","largeImgUrl","doFetch","setState","then","prevState","catch","finally","handleQuerySaver","query","smoothScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","e","largeUrl","target","largeImageURL","componentDidUpdate","prevProps","prevQuery","nextQuery","prevPage","nextPage","render","ImageGallery","map","pic","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar.jsx';\nimport fetchPics from './fetch';\nimport GalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner.jsx';\nimport style from './style.module.css';\n\nclass App extends Component {\n  state = {\n    pics: [],\n    error: null,\n    loading: false,\n    searchQuery: '',\n    page: 1,\n    showModal: false,\n    largeImgUrl: '',\n  };\n\n  doFetch = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ loading: true });\n    fetchPics(searchQuery, page)\n      .then((pics) =>\n        this.setState((prevState) => ({\n          pics: [...prevState.pics, ...pics],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n  handleQuerySaver = (query) => {\n    this.setState({ searchQuery: query });\n  };\n  smoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  showModal = (e) => {\n    const largeUrl = e.target.largeUrl;\n    this.setState({ showModal: true, largeImageURL: largeUrl });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.setState({ pics: [], page: 1 });\n      this.doFetch();\n    }\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    if (prevPage < nextPage) {\n      this.smoothScroll();\n    }\n  }\n  render() {\n    const { pics, loading } = this.state;\n    return (\n      <div className={style.App}>\n        <Searchbar onSubmit={this.handleQuerySaver} />\n        <ul className={style.ImageGallery}>\n          {pics.map((pic) => (\n            <GalleryItem\n              \n            />\n          ))}\n        </ul>\n        {loading && <Spinner />}\n        {pics.length > 0 && <Button loadMore={this.doFetch} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}