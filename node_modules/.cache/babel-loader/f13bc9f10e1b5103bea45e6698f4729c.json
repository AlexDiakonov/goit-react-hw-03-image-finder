{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/reactStudy/hw3/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Searchbar from './components/Searchbar.jsx';\nimport fetchPics from './fetch';\nimport GalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner.jsx';\nimport style from './style.module.css';\nimport Modal from './components/Modal.jsx';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pics: [],\n      error: null,\n      loading: false,\n      searchQuery: '',\n      page: 1,\n      showModal: false,\n      largeImgUrl: '',\n      largeAlt: ''\n    };\n\n    this.doFetch = () => {\n      const {\n        searchQuery,\n        page\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      fetchPics(searchQuery, page).then(pics => this.setState(prevState => ({\n        pics: [...prevState.pics, ...pics],\n        page: prevState.page + 1\n      }))).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    };\n\n    this.handleQuerySaver = query => {\n      this.setState({\n        searchQuery: query\n      });\n    };\n\n    this.smoothScroll = () => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth'\n      });\n    };\n\n    this.showModal = e => {\n      const largeUrl = e.target.dataset.url;\n      const largeAlt = e.target.alt;\n      this.setState({\n        showModal: true,\n        largeImageURL: largeUrl,\n        largeAlt: largeAlt\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({\n        pics: [],\n        page: 1\n      });\n      this.doFetch();\n    }\n\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevPage < nextPage) {\n      this.smoothScroll();\n    }\n  }\n\n  render() {\n    const {\n      pics,\n      loading,\n      showModal,\n      largeImageURL\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Searchbar, {\n      onSubmit: this.handleQuerySaver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: style.ImageGallery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, pics.map(pic => /*#__PURE__*/React.createElement(GalleryItem, {\n      showModal: this.showModal,\n      key: pic.id,\n      id: pic.id,\n      src: pic.webformatURL,\n      alt: pic.tags,\n      largeUrl: pic.largeImageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }))), loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), pics.length > 0 && /*#__PURE__*/React.createElement(Button, {\n      loadMore: this.doFetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }), showModal && /*#__PURE__*/React.createElement(Modal, {\n      imgUrl: largeImageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macos/Desktop/reactStudy/hw3/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Searchbar","fetchPics","GalleryItem","Button","Spinner","style","Modal","App","state","pics","error","loading","searchQuery","page","showModal","largeImgUrl","largeAlt","doFetch","setState","then","prevState","catch","finally","handleQuerySaver","query","smoothScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","e","largeUrl","target","dataset","url","alt","largeImageURL","componentDidUpdate","prevProps","prevQuery","nextQuery","prevPage","nextPage","render","ImageGallery","map","pic","id","webformatURL","tags","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,IAAI,EAAE,CALA;AAMNC,MAAAA,SAAS,EAAE,KANL;AAONC,MAAAA,WAAW,EAAE,EAPP;AAQNC,MAAAA,QAAQ,EAAE;AARJ,KADkB;;AAAA,SAY1BC,OAZ0B,GAYhB,MAAM;AACd,YAAM;AAAEL,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwB,KAAKL,KAAnC;AACA,WAAKU,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAV,MAAAA,SAAS,CAACW,WAAD,EAAcC,IAAd,CAAT,CACGM,IADH,CACSV,IAAD,IACJ,KAAKS,QAAL,CAAeE,SAAD,KAAgB;AAC5BX,QAAAA,IAAI,EAAE,CAAC,GAAGW,SAAS,CAACX,IAAd,EAAoB,GAAGA,IAAvB,CADsB;AAE5BI,QAAAA,IAAI,EAAEO,SAAS,CAACP,IAAV,GAAiB;AAFK,OAAhB,CAAd,CAFJ,EAOGQ,KAPH,CAOUX,KAAD,IAAW,KAAKQ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd,CAPpB,EAQGY,OARH,CAQW,MAAM,KAAKJ,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd,CARjB;AASD,KAxByB;;AAAA,SAyB1BY,gBAzB0B,GAyBNC,KAAD,IAAW;AAC5B,WAAKN,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEY;AAAf,OAAd;AACD,KA3ByB;;AAAA,SA4B1BC,YA5B0B,GA4BX,MAAM;AACnBC,MAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,QAAAA,GAAG,EAAEC,QAAQ,CAACC,eAAT,CAAyBC,YADhB;AAEdC,QAAAA,QAAQ,EAAE;AAFI,OAAhB;AAID,KAjCyB;;AAAA,SAkC1BlB,SAlC0B,GAkCbmB,CAAD,IAAO;AACjB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,GAAlC;AACA,YAAMrB,QAAQ,GAAGiB,CAAC,CAACE,MAAF,CAASG,GAA1B;AACA,WAAKpB,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,IADC;AAEZyB,QAAAA,aAAa,EAAEL,QAFH;AAGZlB,QAAAA,QAAQ,EAAEA;AAHE,OAAd;AAKD,KA1CyB;AAAA;;AA4C1BwB,EAAAA,kBAAkB,CAACC,SAAD,EAAYrB,SAAZ,EAAuB;AACvC,UAAMsB,SAAS,GAAGtB,SAAS,CAACR,WAA5B;AACA,UAAM+B,SAAS,GAAG,KAAKnC,KAAL,CAAWI,WAA7B;;AACA,QAAI8B,SAAS,KAAKC,SAAlB,EAA6B;AAC3B,WAAKzB,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAE,EAAR;AAAYI,QAAAA,IAAI,EAAE;AAAlB,OAAd;AACA,WAAKI,OAAL;AACD;;AACD,UAAM2B,QAAQ,GAAGxB,SAAS,CAACP,IAA3B;AACA,UAAMgC,QAAQ,GAAG,KAAKrC,KAAL,CAAWK,IAA5B;;AACA,QAAI+B,QAAQ,GAAGC,QAAf,EAAyB;AACvB,WAAKpB,YAAL;AACD;AACF;;AACDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErC,MAAAA,IAAF;AAAQE,MAAAA,OAAR;AAAiBG,MAAAA,SAAjB;AAA4ByB,MAAAA;AAA5B,QAA8C,KAAK/B,KAAzD;AACA,wBACE;AAAK,MAAA,SAAS,EAAEH,KAAK,CAACE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKgB,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,MAAA,SAAS,EAAElB,KAAK,CAAC0C,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtC,IAAI,CAACuC,GAAL,CAAUC,GAAD,iBACR,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,KAAKnC,SADlB;AAEE,MAAA,GAAG,EAAEmC,GAAG,CAACC,EAFX;AAGE,MAAA,EAAE,EAAED,GAAG,CAACC,EAHV;AAIE,MAAA,GAAG,EAAED,GAAG,CAACE,YAJX;AAKE,MAAA,GAAG,EAAEF,GAAG,CAACG,IALX;AAME,MAAA,QAAQ,EAAEH,GAAG,CAACV,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,EAcG5B,OAAO,iBAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdd,EAeGF,IAAI,CAAC4C,MAAL,GAAc,CAAd,iBAAmB,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKpC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAftB,EAgBGH,SAAS,iBAAI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEyB,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBhB,CADF;AAoBD;;AA/EyB;;AAkF5B,eAAehC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar.jsx';\nimport fetchPics from './fetch';\nimport GalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner.jsx';\nimport style from './style.module.css';\nimport Modal from './components/Modal.jsx';\n\nclass App extends Component {\n  state = {\n    pics: [],\n    error: null,\n    loading: false,\n    searchQuery: '',\n    page: 1,\n    showModal: false,\n    largeImgUrl: '',\n    largeAlt: '',\n  };\n\n  doFetch = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ loading: true });\n    fetchPics(searchQuery, page)\n      .then((pics) =>\n        this.setState((prevState) => ({\n          pics: [...prevState.pics, ...pics],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n  handleQuerySaver = (query) => {\n    this.setState({ searchQuery: query });\n  };\n  smoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  showModal = (e) => {\n    const largeUrl = e.target.dataset.url;\n    const largeAlt = e.target.alt;\n    this.setState({\n      showModal: true,\n      largeImageURL: largeUrl,\n      largeAlt: largeAlt,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.setState({ pics: [], page: 1 });\n      this.doFetch();\n    }\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    if (prevPage < nextPage) {\n      this.smoothScroll();\n    }\n  }\n  render() {\n    const { pics, loading, showModal, largeImageURL } = this.state;\n    return (\n      <div className={style.App}>\n        <Searchbar onSubmit={this.handleQuerySaver} />\n        <ul className={style.ImageGallery}>\n          {pics.map((pic) => (\n            <GalleryItem\n              showModal={this.showModal}\n              key={pic.id}\n              id={pic.id}\n              src={pic.webformatURL}\n              alt={pic.tags}\n              largeUrl={pic.largeImageURL}\n            />\n          ))}\n        </ul>\n        {loading && <Spinner />}\n        {pics.length > 0 && <Button loadMore={this.doFetch} />}\n        {showModal && <Modal imgUrl={largeImageURL} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}